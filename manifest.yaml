id: gitearunner
title: "GiteaRunner"
version: 1.22.6
release-notes: |
  * Upstream code update
  * Update bundling process to use Deno emit module
  * Full list of upstream changes available [here](https://github.com/go-gitea/gitea/compare/v1.22.0...v1.22.6)
license: MIT
wrapper-repo: "https://github.com/auggie-lahey/gitea-runner-startos"
upstream-repo: "https://github.com/go-gitea/gitea"
support-site: "https://docs.gitea.io/en-us/"
marketing-site: "https://gitea.io/en-us/"
build: ["make"]
description:
  short: A painless self-hosted Git service.
  long: |
    Gitea is a community managed lightweight code hosting solution written in Go. It is published under the MIT license.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "/usr/local/bin/docker_entrypoint.sh"
  mounts:
    main: /data
hardware-requirements:
  arch:
    - x86_64
    - aarch64
health-checks:
  web-ui:
    name: Web Interface
    success-message: The RoboSats UI is ready
    type: script
config: ~
  # get:
  #   type: script
  # set:
  #   type: script
# properties:
#   type: script
dependencies: {}
volumes:
  main:
    type: data
interfaces:
  main:
    name: Web UI / Git HTTPS/SSH
    description: 'Port 80: Browser Interface and HTTP Git Interface / Port 22: Git SSH Interface'
    tor-config:
      port-mapping:
        80: "3000"
        22: "22"
    lan-config:
      443:
        ssl: true
        internal: 3000
    ui: true
    protocols:
      - tcp
      - http
      - ssh
      - git
alerts: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
# migrations:
#   from:
#     "*":
#       type: script
#       args: ["from"]
#   to:
#     "*":
#       type: script
#       args: ["to"]
